#!/usr/bin/env node

require("dotenv").config();
const http = require("http");
const app = require("../app")();
const utilities = require("../utilities");

(() => {
  // Create HTTP server
  const server = http.createServer(app);

  // Listen on provided port, on all network interfaces.
  const port = utilities.normalizePort(process.env.PORT || "3000");
  server.listen(port);

  // Event listener for HTTP server "error" event.
  function onError(error) {
    if (error.syscall !== "listen") {
      throw error;
    }

    const bind = typeof port === "string" ? `Pipe ${port}` : `Port ${port}`;

    // handle specific listen errors with friendly messages
    switch (error.code) {
      case "EACCES":
        // eslint-disable-next-line
        console.error(`${bind} requires elevated privileges`);
        process.exit(1);
        break;
      case "EADDRINUSE":
        // eslint-disable-next-line
        console.error(`${bind} is already in use`);
        process.exit(1);
        break;
      default:
        throw error;
    }
  }

  // Event listener for HTTP server "listening" event.
  function onListening() {
    const addr = server.address();
    const bind =
      typeof addr === "string" ? `pipe ${addr}` : `port ${addr.port}`;
    // eslint-disable-next-line
    console.log(`Listening on ${bind}`);
  }

  server.on("error", onError);
  server.on("listening", onListening);
})();
